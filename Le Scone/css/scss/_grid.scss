// Variaveis do Grid
$cols: 12;
$gutter: 20px;
$lg-device: 1200px;
$md-device: 760px;
$sm-device: 480px;

// Box sizing
// Todos elementos e todos os afters e befores dos elementos vao usar border box
*, *::after, *::before {
    box-sizing: border-box;
}

// Mixins de media queries
@mixin device($size) {
    @if $size == lg {
        @media screen and (min-width: #{$lg-device}) {
            @content;
        }
    }
    @else if $size == md {
        @media screen and (min-width: #{$md-device}) and (max-width: #{$lg-device} -1) {
            @content;
        }
    } 
    @else if $size == sm {
        @media screen and (min-width: #{$md-device -1}){
            @content;
        }
    } 
}

// Função do grid
@function grid($col, $offset: false) {
    $width: $col / $cols * 100 + 0%;
    $result: calc(#{$width} - #{$gutter});
    @if $offset == offset {
        $gutter: $gutter/2;
        $result: calc(#{$width} + #{$gutter});
    }

    @return $result;
}

// Gera  as classes de grid
@for $i from 1 through $cols {
    .grid-#{$i} {
        width: grid($i);
    }
}

// Mixin estrutura o grid
@mixin grid-structure {
    float: left;
    min-height: 1px;
    margin-left: $gutter/2;
    margin-right: $gutter/2;
    @include device(sm) {
        width: 100%;
        float: none;
        margin: 0 0;
    }
}

[class='grid-'] {
    @include grid-structure;
}

// Gera  as classes de offset
@for $i from 1 through $cols {
    .offset-#{$i} {
        margin-left: grid($i, offset);
        @extend %offset;
    }
}

// Excluindo offsets nos dispositivos mobile
@include device(sm) {
    %offset {
        margin-left: 0px;
    }
}

// Mixin clearfix
@mixin clearfix {
    &::after, &::before {
        content: '';
        display: table;
        clear: both;
    }
}

// Mixin de container
@mixin container {
    max-width: $lg-device;
    margin: 0 auto;
    position: relative;
    @include device(dm) {
        max-width: $md-device;
    }
    @include device(sm) {
        max-width: $sm-device;
        padding-left: $gutter/2;
        padding-right: $gutter/2;
    }
    @include clearfix;
}

.container {
    @include container;
}

// Aplicando o conceito de row para ter colunas dentro e coluna
@mixin row {
    position: relative;
    margin-left: $gutter/2;
    margin-right: $gutter/2;
    // Nao necessita tirar margens em dispositivos mobile pois eles não possuem margens
    @include device(sm) {
        margin-left: 0px;
        margin-right: 0px;
    }
    @include clearfix;
}

.row {
    @include row();
}